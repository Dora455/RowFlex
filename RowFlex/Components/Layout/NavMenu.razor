@implements IDisposable
@using RowFlex.Models
@inject IHttpContextAccessor HttpContextAccessor
@inject UserQuery userQuery
@using System.Security.Claims
@attribute [Authorize]

@using Microsoft.AspNetCore.Authorization

<PageTitle>Authorize Users</PageTitle>


@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">RowFlex</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <!-- Training Plans Link -->
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="training-plans">
                        <span class="" aria-hidden="true"></span> Training Plans
                    </NavLink>
                </div>
                <!-- Trainings Link -->
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="trainings">
                        <span class="" aria-hidden="true"></span> Trainings
                    </NavLink>
                </div>
            </Authorized>

            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="" aria-hidden="true"></span> Register
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>


        <AuthorizeView Roles="Admin">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="club-coach-management">
                    <span class="" aria-hidden="true"></span> Manage Coaches
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="manageClubs">
                    <span class="" aria-hidden="true"></span> Manage Clubs
                </NavLink>
            </div>
        </AuthorizeView>


        <AuthorizeView Roles="Athlete">

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="manage-progress">
                    <span class="" aria-hidden="true"></span> Manage Progress
                </NavLink>
            </div>
            @if (user?.IsWeightMeasurementRequired == true)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="manage-weight">
                        <span class="" aria-hidden="true"></span> Manage Weight
                    </NavLink>
                </div>
            }
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="individual-trainings">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Add individual training
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="request">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Request Membership
                </NavLink>
            </div>
        </AuthorizeView>


        <AuthorizeView Roles="Coach">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="user-progress">
                    <span class="" aria-hidden="true"></span> Check Progress
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="manageAthletes">
                    <span class="" aria-hidden="true"></span> Manage Athletes
                </NavLink>
                <NavLink class="nav-link" href="AddNews">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Add News
                </NavLink>
                <NavLink class="nav-link" href="AddEvent">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Add Event
                </NavLink>
            </div>
        </AuthorizeView>


        <AuthorizeView>
            <Authorized>
                <!-- Account Management -->
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <!-- Logout Button -->
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;
    public User? user;
    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
        var userId = HttpContextAccessor.HttpContext?.User?.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        user = userQuery.GetUserById(userId);
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
